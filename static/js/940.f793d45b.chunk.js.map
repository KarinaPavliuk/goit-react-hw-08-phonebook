{"version":3,"file":"static/js/940.f793d45b.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","store/contactsPage/selectors.js","components/ContactsPage/ContactForm/ContactForm.jsx","components/ContactsPage/Filter/Filter.jsx","components/ContactsPage/ContactList/ContactList.jsx","components/ContactsPage/ContactsPage.jsx","components/ContactsPage/LogOut/LogOut.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    if (!filter || filter === '') {\n      return contacts;\n    }\n\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'store/contactsPage/thunks';\nimport { selectContacts } from 'store/contactsPage/selectors';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts?.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is alredy in contacts.`);\n      // return Notify.warning(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContactThunk({ name, number }));\n\n    form.reset();\n  };\n\n  const handleClick = evt => {\n    console.log(evt.target.value);\n    evt.target.value = '';\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          // value={contacts.name}\n          onClick={handleClick}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label htmlFor=\"tel\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // value={contacts.phone}\n          onClick={handleClick}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n// export const ContactForm = () => {\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"name\">Name</label>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           // value={name}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//         <br></br>\n//         <label htmlFor=\"tel\">Number</label>\n//         <input\n//           type=\"tel\"\n//           name=\"number\"\n//           // value={number}\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//         <button type=\"submit\">Add contact</button>\n//       </form>\n//     </div>\n//   );\n// };\n","import { useDispatch } from 'react-redux';\nimport { handleFilterChanges } from 'store/contactsPage/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const value = target.value.toLowerCase();\n    dispatch(handleFilterChanges(value));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" onChange={handleChange} />\n    </>\n  );\n};\n\n// export const Filter = () => {\n//   return (\n//     <>\n//       <p>Find contacts by name</p>\n//       <input\n//         type=\"text\"\n//         name=\"filter\"\n//         // value={filter}\n//       />\n//     </>\n//   );\n// };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContactThunk,\n  getContactsThunk,\n} from 'store/contactsPage/thunks';\nimport { selectVisibleContacts } from 'store/contactsPage/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const handleDelete = evt => {\n    dispatch(deleteContactThunk(evt.currentTarget.id));\n  };\n\n  const visibilityContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibilityContacts?.map(contact => (\n        <li key={contact.id}>\n          {contact.name} {contact.phone}\n          <button type=\"button\" id={contact.id} onClick={handleDelete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n// export const ContactList = () => {\n//   return (\n//     <ul>\n//       <li>\n//         Name Phone\n//         <button type=\"button\">Delete</button>\n//       </li>\n//       <li>\n//         Name Phone\n//         <button type=\"button\">Delete</button>\n//       </li>\n//       <li>\n//         Name Phone\n//         <button type=\"button\">Delete</button>\n//       </li>\n//     </ul>\n//   );\n// };\n","import { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactList/ContactList';\nimport { LogOut } from './LogOut/LogOut';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n      <LogOut />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import { logOutThunk } from 'store/users/thunks';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleClick = body => {\n    dispatch(logOutThunk(body));\n    navigate('/');\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleClick}>\n        Log out\n      </button>\n    </>\n  );\n};\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectVisibleContacts","filter","contact","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","handleClick","evt","console","log","target","_jsx","children","_jsxs","onSubmit","preventDefault","form","number","alert","addContactThunk","reset","htmlFor","type","onClick","pattern","title","required","Filter","_Fragment","onChange","_ref","handleFilterChanges","ContactList","useEffect","getContactsThunk","handleDelete","deleteContactThunk","currentTarget","id","visibilityContacts","phone","LogOut","navigate","useNavigate","body","logOutThunk"],"sourceRoot":""}